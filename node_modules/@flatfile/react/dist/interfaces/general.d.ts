export declare type ScalarDictionary = IDictionary<Nullable<IPrimitive>>;
export declare type IPrimitiveDictionary = IDictionary<IPrimitive>;
export interface IDictionary<V = string> {
    [key: string]: V;
}
export interface IValidationResponse {
    key: string;
    message: string;
    level?: IWarningLevel;
}
export interface IBeforeFetchRequest {
    operation: string;
    variables: Record<string, any>;
}
export interface IBeforeFetchResponse {
    headers?: Record<string, string>;
}
export declare type ScalarDictionaryWithCustom = {
    $custom?: ScalarDictionary;
    [key: string]: Nullable<IPrimitive> | ScalarDictionary;
};
declare type IWarningLevel = 'error' | 'warning' | 'info';
export declare type IPrimitive = string | number | boolean;
export declare type Nullable<T> = T | undefined | null;
export {};
