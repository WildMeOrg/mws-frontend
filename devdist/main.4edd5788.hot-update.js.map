{"version":3,"sources":["webpack://codex-frontend/./src/components/EditEntityModal.jsx","webpack://codex-frontend/webpack/runtime/getFullHash"],"names":["open","onSave","Function","prototype","onClose","fieldValues","fieldSchema","categories","categoryArray","Object","values","initialState","reduce","memo","field","name","value","useState","formState","setFormState","currentCategory","setCurrentCategory","height","marginTop","_","newCategory","map","category","labelId","maxWidth","fieldData","schema","find","candidateSchema","matchingCategory","newFieldValue","padding"],"mappings":"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","file":"main.4edd5788.hot-update.js","sourcesContent":["import React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Grid from '@material-ui/core/Grid';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from './Button';\nimport LabeledInput from './LabeledInput';\nimport StandardDialog from './StandardDialog';\n\nexport default function({\n  open,\n  onSave = Function.prototype,\n  onClose = Function.prototype,\n  fieldValues,\n  fieldSchema,\n  categories,\n}) {\n  const categoryArray = categories ? Object.values(categories) : null;\n\n  const initialState = fieldValues.reduce((memo, field) => {\n    memo[field.name] = field.value;\n    return memo;\n  }, {});\n\n  const [formState, setFormState] = useState(initialState);\n  const [currentCategory, setCurrentCategory] = useState(\n    categories ? categoryArray[0].name : null,\n  );\n\n  return (\n    <StandardDialog open={open} onClose={onClose} titleId=\"EDIT\">\n      <DialogContent style={{ height: 500 }}>\n        {categories && (\n          <Tabs\n            component=\"h3\"\n            value={currentCategory}\n            style={{ marginTop: 0 }}\n            onChange={(_, newCategory) =>\n              setCurrentCategory(newCategory)\n            }\n          >\n            {categoryArray.map(category => (\n              <Tab\n                key={category.name}\n                value={category.name}\n                label={<FormattedMessage id={category.labelId} />}\n              />\n            ))}\n          </Tabs>\n        )}\n        <Grid\n          container\n          spacing={2}\n          justifyContent=\"center\"\n          style={{ maxWidth: 320 }}\n        >\n          {fieldValues.map(fieldData => {\n            const schema = fieldSchema.find(\n              candidateSchema =>\n                candidateSchema.name === fieldData.name,\n            );\n\n            const matchingCategory = currentCategory\n              ? schema.category === currentCategory\n              : true;\n            if (!matchingCategory) return null;\n\n            return (\n              <Grid item key={fieldData.name}>\n                <LabeledInput\n                  schema={schema}\n                  value={formState[fieldData.name]}\n                  onChange={newFieldValue => {\n                    setFormState({\n                      ...formState,\n                      [fieldData.name]: newFieldValue,\n                    });\n                  }}\n                />\n              </Grid>\n            );\n          })}\n        </Grid>\n      </DialogContent>\n      <DialogActions\n        style={{ padding: '0px 24px 24px 24px', marginTop: 32 }}\n      >\n        <Button\n          onClick={() => {\n            setFormState(initialState);\n            onClose();\n          }}\n          display=\"basic\"\n        >\n          <FormattedMessage id=\"CANCEL\" />\n        </Button>\n        <Button\n          onClick={() => {\n            onSave(formState);\n          }}\n          display=\"primary\"\n          autoFocus\n        >\n          <FormattedMessage id=\"CONFIRM\" />\n        </Button>\n      </DialogActions>\n    </StandardDialog>\n  );\n}\n","__webpack_require__.h = () => (\"490ded01\")"],"sourceRoot":""}