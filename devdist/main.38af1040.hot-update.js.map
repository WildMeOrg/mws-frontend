{"version":3,"sources":["webpack://codex-frontend/./src/pages/sighting/encounters/CreateIndividualModal.jsx","webpack://codex-frontend/webpack/runtime/getFullHash"],"names":["calculateInitialState","schemas","reduce","memo","field","set","name","defaultValue","CreateIndividualModal","open","onClose","encounterId","usePostIndividual","loading","error","postIndividual","useState","formState","setFormState","newIndividualId","setNewIndividualId","fieldSchemas","useIndividualFieldSchemas","createFieldSchemas","filter","f","requiredForIndividualCreation","useEffect","initialState","onCloseDialog","map","schema","get","newFieldValue","newFormState","marginTop","marginBottom","individualData","pick","newId"],"mappings":"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","file":"main.38af1040.hot-update.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { get, set, pick } from 'lodash-es';\n\nimport Grid from '@material-ui/core/Grid';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport usePostIndividual from '../../../models/individual/usePostIndividual';\nimport useIndividualFieldSchemas from '../../../models/individual/useIndividualFieldSchemas';\nimport StandardDialog from '../../../components/StandardDialog';\nimport InputRow from '../../../components/fields/edit/InputRowNew';\nimport Button from '../../../components/Button';\nimport ButtonLink from '../../../components/ButtonLink';\nimport Alert from '../../../components/Alert';\nimport Text from '../../../components/Text';\n\nfunction calculateInitialState(schemas) {\n  if (!schemas) return {};\n  return schemas.reduce((memo, field) => {\n    set(memo, field.name, field.defaultValue);\n    return memo;\n  }, {});\n}\n\nexport default function CreateIndividualModal({\n  open,\n  onClose,\n  encounterId,\n}) {\n  const { loading, error, postIndividual } = usePostIndividual();\n\n  const [formState, setFormState] = useState({});\n\n  const [newIndividualId, setNewIndividualId] = useState(null);\n  const fieldSchemas = useIndividualFieldSchemas();\n  const createFieldSchemas = fieldSchemas.filter(\n    f => f.requiredForIndividualCreation,\n  );\n\n  useEffect(() => {\n    const initialState = calculateInitialState(fieldSchemas);\n    setFormState(initialState);\n  }, fieldSchemas);\n\n  const onCloseDialog = () => {\n    setFormState(calculateInitialState(fieldSchemas));\n    setNewIndividualId(null);\n    onClose();\n  };\n\n  return (\n    <StandardDialog\n      maxWidth={newIndividualId ? 'sm' : 'xl'}\n      titleId={\n        newIndividualId\n          ? 'NEW_INDIVIDUAL_CREATED'\n          : 'CREATE_INDIVIDUAL'\n      }\n      open={open}\n      onClose={onCloseDialog}\n    >\n      <DialogContent>\n        {newIndividualId ? (\n          <Text id=\"NEW_INDIVIDUAL_CREATED_DESCRIPTION\" />\n        ) : (\n          <Grid\n            container\n            spacing={2}\n            justifyContent=\"center\"\n            component=\"form\"\n            direction=\"column\"\n          >\n            {createFieldSchemas.map(schema => (\n              <Grid item key={schema.name}>\n                <InputRow schema={schema}>\n                  <schema.editComponent\n                    schema={schema}\n                    value={get(formState, schema.name)}\n                    onChange={newFieldValue => {\n                      const newFormState = {\n                        ...set(formState, schema.name, newFieldValue),\n                      };\n                      setFormState(newFormState);\n                    }}\n                  />\n                </InputRow>\n              </Grid>\n            ))}\n          </Grid>\n        )}\n        {error && (\n          <Alert\n            titleId=\"SERVER_ERROR\"\n            style={{ marginTop: 16, marginBottom: 8 }}\n            severity=\"error\"\n          >\n            {error}\n          </Alert>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          display=\"basic\"\n          onClick={onCloseDialog}\n          id={newIndividualId ? 'CLOSE' : 'CANCEL'}\n        />\n        {newIndividualId ? (\n          <ButtonLink\n            id=\"VIEW_NEW_INDIVIDUAL\"\n            display=\"primary\"\n            href={`/individuals/${newIndividualId}`}\n          />\n        ) : (\n          <Button\n            display=\"primary\"\n            loading={loading}\n            onClick={async () => {\n              const individualData = pick(formState, 'names'); // just this for now...\n              const newId = await postIndividual(\n                individualData,\n                encounterId,\n              );\n              setNewIndividualId(newId);\n            }}\n            id=\"CREATE_INDIVIDUAL\"\n          />\n        )}\n      </DialogActions>\n    </StandardDialog>\n  );\n}\n","__webpack_require__.h = () => (\"475a9410\")"],"sourceRoot":""}