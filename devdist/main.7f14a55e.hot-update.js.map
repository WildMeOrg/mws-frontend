{"version":3,"sources":["webpack://codex-frontend/./src/components/filterFields/mapUtils/PointDistanceMap.jsx","webpack://codex-frontend/webpack/runtime/getFullHash"],"names":["lastMarker","lastCircle","PointDistanceMap","distance","gps","onChange","openCount","rest","useState","mapObject","setMapObject","mapsApi","setMapsApi","draw","lat","lng","setMap","console","log","markerPosition","LatLng","circle","Circle","center","radius","strokeColor","strokeWeight","strokeOpacity","fillColor","fillOpacity","marker","Marker","position","useEffect","setOptions","get","parseFloat","height","width","maxWidth","maxHeight","key","googleMapsApiKey","minZoom","map","maps"],"mappings":"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","file":"main.7f14a55e.hot-update.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { get } from 'lodash-es';\nimport GoogleMapReact from 'google-map-react';\nimport { googleMapsApiKey } from '../../../constants/apiKeys';\n\nlet lastMarker = null;\nlet lastCircle = null;\n\n/* component expects distance in kilometers */\nexport default function PointDistanceMap({\n  distance = 50,\n  gps,\n  onChange,\n  openCount,\n  ...rest\n}) {\n  const [mapObject, setMapObject] = useState(null);\n  const [mapsApi, setMapsApi] = useState(null);\n\n  function draw(lat, lng) {\n    if (lastMarker) lastMarker.setMap(null); // remove old marker\n    if (lastCircle) lastCircle.setMap(null); // remove old circle\n\n    console.log('draw called with', lat, lng, mapsApi);\n    const markerPosition = new mapsApi.LatLng(lat, lng);\n\n    const circle = new mapsApi.Circle({\n      center: markerPosition,\n      radius: 1000 * distance,\n      strokeColor: '#000000',\n      strokeWeight: 2,\n      strokeOpacity: 0.8,\n      fillColor: '#000000',\n      fillOpacity: 0.35,\n    });\n\n    circle.setMap(mapObject);\n\n    const marker = new mapsApi.Marker({\n      position: markerPosition,\n    });\n    marker.setMap(mapObject);\n\n    lastMarker = marker;\n    lastCircle = circle;\n  }\n\n  useEffect(\n    () => {\n      if (lastCircle) {\n        lastCircle.setOptions({\n          radius: 1000 * distance,\n        });\n      }\n    },\n    [distance],\n  );\n\n  useEffect(\n    () => {\n      const lat = get(gps, '0');\n      const lng = get(gps, '1');\n      if (lat && lng) draw(parseFloat(lat), parseFloat(lng));\n    },\n    [openCount, gps],\n  );\n\n  return (\n    <div\n      style={{\n        height: 400,\n        width: 500,\n        maxWidth: '100%',\n        maxHeight: '50vh',\n      }}\n    >\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: googleMapsApiKey }}\n        defaultCenter={{\n          lat: 0,\n          lng: 0,\n        }}\n        defaultZoom={1.3}\n        options={{ minZoom: 1 }}\n        onClick={({ lat, lng }) => {\n          onChange({ lat, lng });\n          draw(lat, lng);\n        }}\n        yesIWantToUseGoogleMapApiInternals\n        onGoogleApiLoaded={({ map, maps }) => {\n          setMapObject(map);\n          setMapsApi(maps);\n        }}\n        {...rest}\n      />\n    </div>\n  );\n}\n","__webpack_require__.h = () => (\"b59c34b3\")"],"sourceRoot":""}