{"version":3,"sources":["webpack://codex-frontend/./src/components/dataDisplays/DataDisplay.jsx","webpack://codex-frontend/webpack/runtime/getFullHash"],"names":["getCellAlignment","cellIndex","columnDefinition","align","undefined","DataDisplay","columns","data","title","onPrint","initiallySelectedRow","onSelectRow","Function","prototype","hideFilterSearch","renderExpandedRow","variant","idKey","noTitleBar","loading","paginated","paginatedExternally","page","onChangePage","rowsPerPage","dataCount","paperStyles","cellStyles","rest","initialColumnNames","filter","c","get","map","name","useState","selectedRow","setSelectedRow","visibleColumnNames","setVisibleColumnNames","setFilter","sortColumn","setSortColumn","sortDirection","setSortDirection","anchorEl","setAnchorEl","filterPopperOpen","Boolean","startIndex","endIndex","Infinity","visibleData","datum","index","match","forEach","userSuppliedDataParser","rawValue","dataValue","userValue","toLowerCase","trim","stringifiedValue","JSON","stringify","includes","sortedData","sortBy","reverse","visibleColumns","column","TransitionProps","padding","margin","length","vc","label","sendCsv","marginRight","event","currentTarget","Paper","minWidth","i","activeSort","whiteSpace","TablePaginationActions"],"mappings":"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","file":"main.490ded01.hot-update.js","sourcesContent":["import React, { useState } from 'react';\nimport { get, sortBy } from 'lodash-es';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport Fade from '@material-ui/core/Fade';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport Print from '@material-ui/icons/Print';\nimport FilterList from '@material-ui/icons/FilterList';\nimport CloudDownload from '@material-ui/icons/CloudDownload';\n\nimport FilterBar from '../FilterBar';\nimport Text from '../Text';\nimport TablePaginationActions from './TablePaginationActions';\nimport CollabsibleRow from './CollapsibleRow';\nimport sendCsv from './sendCsv';\n\nfunction getCellAlignment(cellIndex, columnDefinition) {\n  if (columnDefinition.align) return columnDefinition.align;\n  if (cellIndex === 0) return undefined;\n  return 'right';\n}\n\n/* Note for component consumers: every data item needs a unique ID!\n   Yeah yeah typescript proptypes yeah yeah */\nexport default function DataDisplay({\n  columns,\n  data,\n  title,\n  onPrint,\n  initiallySelectedRow = null,\n  onSelectRow = Function.prototype,\n  hideFilterSearch = false,\n  renderExpandedRow,\n  variant = 'primary',\n  idKey = 'id',\n  noTitleBar,\n  loading,\n  paginated = false,\n  paginatedExternally = true, // display all data provided and let parent component(s) paginate\n  page,\n  onChangePage,\n  rowsPerPage,\n  dataCount, // in a paginated table there will be more data than provided to the data prop\n  paperStyles = {},\n  cellStyles = {},\n  ...rest\n}) {\n  const initialColumnNames = columns\n    .filter(c => get(c, 'options.display', true))\n    .map(c => c.name);\n\n  const [selectedRow, setSelectedRow] = useState(\n    initiallySelectedRow,\n  );\n  const [visibleColumnNames, setVisibleColumnNames] = useState(\n    initialColumnNames,\n  );\n  const [filter, setFilter] = useState('');\n  const [sortColumn, setSortColumn] = useState(null);\n  const [sortDirection, setSortDirection] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const filterPopperOpen = Boolean(anchorEl);\n\n  const startIndex = paginated ? page * rowsPerPage : 0;\n  const endIndex = paginated\n    ? (page + 1) * rowsPerPage - 1\n    : Infinity;\n\n  const visibleData = data.filter((datum, index) => {\n    if (index < startIndex && !paginatedExternally) return false;\n    if (index > endIndex && !paginatedExternally) return false;\n\n    let match = false;\n    columns.forEach(c => {\n      const userSuppliedDataParser = get(c, 'options.getStringValue');\n      const rawValue = get(datum, c.name, '');\n      let dataValue;\n      if (userSuppliedDataParser) {\n        const userValue = userSuppliedDataParser(rawValue, datum);\n        dataValue = userValue\n          ? userValue.toLowerCase().trim()\n          : userValue;\n      } else {\n        const stringifiedValue = JSON.stringify(rawValue) || '';\n        dataValue = stringifiedValue.toLowerCase().trim();\n      }\n      if (dataValue && dataValue.includes(filter.toLowerCase()))\n        match = true;\n    });\n\n    return match;\n  });\n\n  let sortedData = visibleData;\n  if (sortColumn) {\n    sortedData = sortBy(data, sortColumn);\n    if (sortDirection === 'asc') sortedData.reverse();\n  }\n\n  const visibleColumns = columns.filter(column =>\n    visibleColumnNames.includes(column.name),\n  );\n\n  return (\n    <div {...rest}>\n      <Popper\n        open={filterPopperOpen}\n        anchorEl={anchorEl}\n        placement=\"bottom-end\"\n        transition\n      >\n        {({ TransitionProps }) => (\n          <Fade {...TransitionProps} timeout={350}>\n            <Paper\n              style={{ padding: '20px 32px 20px 20px' }}\n              elevation={8}\n            >\n              <Grid container direction=\"column\">\n                {!hideFilterSearch && (\n                  <FilterBar\n                    size=\"small\"\n                    width={140}\n                    style={{ margin: '0 0 12px 0' }}\n                    value={filter}\n                    onChange={setFilter}\n                  />\n                )}\n                {columns\n                  .filter(c =>\n                    get(c, 'options.displayInFilter', true),\n                  )\n                  .map(c => (\n                    <FormControlLabel\n                      key={c.name}\n                      control={\n                        <Checkbox\n                          size=\"small\"\n                          checked={visibleColumnNames.includes(\n                            c.name,\n                          )}\n                          onClick={() => {\n                            if (visibleColumnNames.includes(c.name)) {\n                              if (visibleColumnNames.length === 1)\n                                return;\n                              setVisibleColumnNames(\n                                visibleColumnNames.filter(\n                                  vc => vc !== c.name,\n                                ),\n                              );\n                            } else {\n                              setVisibleColumnNames([\n                                ...visibleColumnNames,\n                                c.name,\n                              ]);\n                            }\n                          }}\n                        />\n                      }\n                      label={<Text variant=\"body2\">{c.label}</Text>}\n                    />\n                  ))}\n              </Grid>\n            </Paper>\n          </Fade>\n        )}\n      </Popper>\n      {!noTitleBar && (\n        <Grid\n          container\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          style={{ margin: '16px 0' }}\n        >\n          <Grid item>\n            <Text\n              variant={\n                variant === 'primary' ? 'subtitle1' : 'subtitle2'\n              }\n              style={{\n                margin:\n                  variant === 'secondary' ? '12px 0 0 12px' : 'unset',\n              }}\n            >\n              {title}\n            </Text>\n          </Grid>\n          <Grid item>\n            {variant === 'primary' && (\n              <IconButton\n                onClick={() => sendCsv(visibleColumns, visibleData)}\n                size=\"small\"\n              >\n                <CloudDownload style={{ marginRight: 4 }} />\n              </IconButton>\n            )}\n            {onPrint && (\n              <IconButton onClick={onPrint} size=\"small\">\n                <Print style={{ marginRight: 4 }} />\n              </IconButton>\n            )}\n            <IconButton\n              onClick={event => {\n                setAnchorEl(anchorEl ? null : event.currentTarget);\n              }}\n              size=\"small\"\n            >\n              <FilterList />\n            </IconButton>\n          </Grid>\n        </Grid>\n      )}\n      <TableContainer\n        component={variant === 'secondary' ? Paper : undefined}\n        elevation={variant === 'secondary' ? 2 : undefined}\n        style={paperStyles}\n      >\n        <Table\n          style={{ minWidth: 10 }}\n          size=\"small\"\n          aria-label={title}\n        >\n          <TableHead>\n            <TableRow>\n              {renderExpandedRow && <TableCell />}\n              {visibleColumns.map((c, i) => {\n                const activeSort = c.name === sortColumn;\n                return (\n                  <TableCell\n                    key={c.name}\n                    align={getCellAlignment(i, c)}\n                    sortDirection={activeSort ? sortDirection : false}\n                    style={{ whiteSpace: 'nowrap' }}\n                  >\n                    <TableSortLabel\n                      active={activeSort}\n                      direction={activeSort ? sortDirection : 'asc'}\n                      onClick={() => {\n                        setSortDirection(\n                          sortDirection === 'asc' ? 'desc' : 'asc',\n                        );\n                        setSortColumn(c.name);\n                      }}\n                    >\n                      {c.label}\n                    </TableSortLabel>\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {!loading &&\n              sortedData.map(datum => (\n                <CollabsibleRow\n                  key={get(datum, idKey)}\n                  onClick={() => {\n                    if (selectedRow === get(datum, idKey)) {\n                      setSelectedRow(null);\n                      onSelectRow(null);\n                    } else {\n                      setSelectedRow(get(datum, idKey));\n                      onSelectRow(datum);\n                    }\n                  }}\n                  selected={selectedRow === get(datum, idKey)}\n                  datum={datum}\n                  cellStyles={cellStyles}\n                  columns={visibleColumns}\n                  renderExpandedRow={renderExpandedRow}\n                />\n              ))}\n          </TableBody>\n          {paginated && !loading && (\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  page={page}\n                  count={dataCount || get(data, 'length', 0)}\n                  onChangePage={onChangePage}\n                  rowsPerPage={rowsPerPage}\n                  rowsPerPageOptions={[rowsPerPage]}\n                  ActionsComponent={TablePaginationActions}\n                />\n              </TableRow>\n            </TableFooter>\n          )}\n        </Table>\n      </TableContainer>\n      {loading && <LinearProgress style={{ margin: '16px 32px' }} />}\n    </div>\n  );\n}\n","__webpack_require__.h = () => (\"081d186a\")"],"sourceRoot":""}